{
  "compilerOptions": {
    "module": "commonjs", //指定生成哪个模块系统代码
    "target": "esnext", //指定ECMAScript目标版本
    //编译过程中需要引入的库文件的列表
    "lib": [
      "esnext",
      "dom",
      "dom.iterable"
    ],
    "allowJs": false, // 不允许tsx引入js文件
    "jsx": "preserve", //在.tsx文件里支持JSX："React"或"Preserve"
    "sourceMap": true,
    "strict": true, //启用所有严格类型检查选项。
    "noUnusedLocals": true, //若有未使用的局部变量则抛错。
    "moduleResolution": "node", //决定如何处理模块。或者是"Node"对于Node.js/io.js，或者是"Classic"（默认）
    "baseUrl": "./", //解析非相对模块名的基准目录
    "paths": {}, //模块名到基于baseUrl的路径映射的列表
    //默认所有可见的"@types"包会在编译过程中被包含进来 所以我们可以install 一些必要的@包
    "types": [
      "webpack-env"
    ], //要包含的类型声明文件名列表；如果指定了types，只有被列出来的包才会被包含进来
    "allowSyntheticDefaultImports": true, //允许从没有设置默认导出的模块中默认导入
    // 不报告执行不到的代码错误
    // "allowUnreachableCode": true,
    // 不报告未使用的标签错误。1
    // "allowUnusedLabels": true,
    "esModuleInterop": true,
    "experimentalDecorators": true, //启用实验性的ES装饰器
    "emitDecoratorMetadata": true, //给源码里的装饰器声明加上设计类型元数据
    "resolveJsonModule": true
  },
  "include": [
    "src"
  ],
  "exclude": ["node_modules/**"]
}